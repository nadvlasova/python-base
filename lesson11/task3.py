'''
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере.
Запрашивать у пользователя данные и заполнять список необходимо только числами.
Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя,
например, команду «stop». При этом скрипт завершается, сформированный список с числами выводится на экран.

Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
Вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться
'''

new_list = []
while(True):
    inp_data = input("Введите положительное число: ")
    if inp_data == 'stop':
        print(new_list)
        break

    class OwnError(Exception):
        def __init__(self, txt):
            self.txt = txt
    try:
        inp_data = int(inp_data)
        if inp_data < 0:
            raise OwnError("Вы ввели отрицательное число!")
    except ValueError:
        print("Вы ввели не число")
    except OwnError as err:
        print(err)
    else:
        print(f"Все хорошо. Ваше число: {inp_data}")
        new_list.append(inp_data)